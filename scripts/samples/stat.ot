#!/usr/bin/env ot --script



def stat_nyms()
{
    OT_API_Output(0, "------------------------------------------------------------------" + "\n")
    OT_API_Output(0, " ************* PSEUDONYMS:  ************* " + "\n")
    
    var nNymCount = OT_API_GetNymCount()
    
    for (var i = 0; i < nNymCount; ++i)
    {
        OT_API_Output(0, "-----" + "\n")
        var strID   = OT_API_GetNym_ID(i)
        var strName = OT_API_GetNym_Name(strID)
        
        OT_API_Output(0, strName + " -- " + strID + "\n")
    }
}

def stat_servers()
{
    OT_API_Output(0, "------------------------------------------------------------------" + "\n")
    OT_API_Output(0, " ************* SERVERS:  ************* " + "\n")
    var nServerCount = OT_API_GetServerCount()
    
    for (var i = 0; i < nServerCount; ++i)
    {
        OT_API_Output(0, "-----" + "\n")
        var strID   = OT_API_GetServer_ID(i)
        var strName = OT_API_GetServer_Name(strID)
        
        OT_API_Output(0, strName + " -- " + strID + "\n")
    }
}

def stat_assets()
{
    OT_API_Output(0, "------------------------------------------------------------------" + "\n")
    OT_API_Output(0, " ************* ASSET TYPES:  ************* " + "\n")
    var nAssetTypeCount = OT_API_GetAssetTypeCount()
    
    for (var i = 0; i < nAssetTypeCount; ++i)
    {
        OT_API_Output(0, "-----" + "\n")
        var strID   = OT_API_GetAssetType_ID(i)
        var strName = OT_API_GetAssetType_Name(strID)
        
        OT_API_Output(0, strName + " -- " + strID + "\n")
    }
}

/*
 static const std::string GetAccountWallet_ID(int nIndex);	 // returns a string containing the account ID, based on index.
 static const std::string GetAccountWallet_Name(const std::string ACCOUNT_ID);	 // returns the account name, based on account ID.
 static const std::string GetAccountWallet_Balance(const std::string ACCOUNT_ID);	 // returns the account balance, based on account ID.
 static const std::string GetAccountWallet_Type(const std::string ACCOUNT_ID);	 // returns the account type (simple, issuer, etc)
 static const std::string GetAccountWallet_AssetTypeID(const std::string ACCOUNT_ID);	 // returns asset type ID of the account
 static const std::string GetAccountWallet_ServerID(const std::string ACCOUNT_ID);	 // returns Server ID of the account
 static const std::string GetAccountWallet_NymID(const std::string ACCOUNT_ID);	 // returns Nym ID of the account
 */
def stat_accounts()
{
    OT_API_Output(0, "------------------------------------------------------------------" + "\n")
    OT_API_Output(0, " ************* ACCOUNTS:  ************* " + "\n")

    var nAccountCount = OT_API_GetAccountCount()
    
    for (var i = 0; i < nAccountCount; ++i)
    {
        OT_API_Output(0, "-----" + "\n")
        var strID       = OT_API_GetAccountWallet_ID(i)
        var strName     = OT_API_GetAccountWallet_Name(strID)
        var strNymID    = OT_API_GetAccountWallet_NymID(strID)
        var strServerID = OT_API_GetAccountWallet_ServerID(strID)
        var strAssetID  = OT_API_GetAccountWallet_AssetTypeID(strID)
        var strBalance  = OT_API_GetAccountWallet_Balance(strID)

        OT_API_Output(0, strName + " -- " + strID + "\n")
        OT_API_Output(0, "Balance: " + strBalance + "\n")
        OT_API_Output(0, "Asset Type: " + OT_API_GetAssetType_Name(strAssetID) + " -- " + strAssetID + "\n")
        OT_API_Output(0, "Owner Nym: " + OT_API_GetNym_Name(strNymID) + " -- " + strNymID + "\n")
        OT_API_Output(0, "Server: " + OT_API_GetServer_Name(strServerID) + " -- " + strServerID + "\n")        
    }
    OT_API_Output(0, "------------------------------------------------------------------" + "\n")
}



def stat_main() 
{
    OT_API_Output(0, "\n\n");

    stat_nyms()
    stat_servers()
    stat_assets()
    stat_accounts()
    
    1
}


stat_main()


