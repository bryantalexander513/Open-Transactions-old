#!/usr/bin/env ot

// --------------------------------------------------------------------
// NOTE: No further need to include these anymore, since OT includes them
// automatically now.
//
//use("../ot/ot_utility.ot")
//use("../ot/otapi.ot")
//use("../ot/ot_made_easy.ot")

// --------------------------------------------------------------------
// Instantiate the "OT Made Easy" object.
//
var madeEasy	= OT_ME()
// ------------------------------

// string OT_CLI_GetValueByKey(Args, str_key)

var strUsage = "\n\n FYI, USAGE: cancel_plan.ot --args \"transnum <transaction_number>\"\n\n"

// Just to show how easy it is now, let's try a "cancel_payment_plan" message.
// (It cancels a payment plan.)

if (!VerifyExists("Server") || !VerifyExists("MyNym") || !VerifyExists("MyAcct") || !VerifyExists("Args"))
{  OT_API_Output(0, strUsage)  }
else
{	
	var strTransactionNum = OT_CLI_GetValueByKey(Args, "transnum")

    if (!VerifyStringVal(strTransactionNum) )
	{
		OT_API_Output(0, "\n\n\nYou need to provide a transaction number...\n\n")
        OT_API_Output(0, strUsage)
	}
	else
	{
		// Send the transaction.
		//
		var strResponse	= madeEasy.cancel_payment_plan(Server, MyNym, MyAcct, strTransactionNum)

		// NOTICE: No need here to deal with retries, timeouts, request number,
		// syncing transaction number, download / process nymbox, etc! It's all
		// handled at a lower level!  Instead, simply check for success or failure:

		if (1 != VerifyMessageSuccess(strResponse))
		{
			OT_API_Output(0, "\n\ncancel_payment_plan: Failed.\n")
		}
		else if (1 != VerifyMsgBalanceAgrmntSuccess(Server, MyNym, MyAcct, strResponse))
		{
			OT_API_Output(0, "\n\ncancel_payment_plan: Balance agreement failed.\n")
		}
		else if (1 != VerifyMsgTrnxSuccess(Server, MyNym, MyAcct, strResponse))
		{
			OT_API_Output(0, "\n\ncancel_payment_plan: Balance agreement succeeded, but transaction failed.\n")
		}
		else
		{
			OT_API_Output(0, "\n\nSuccess in cancel_payment_plan! Server response:\n\n")
			print(strResponse) // stdout
			OT_API_Output(0, "\n\n") // stderr
            return 1
		}
	}
}

// Done!
0

