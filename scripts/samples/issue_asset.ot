#!/usr/bin/env ot

    

def main_issue_asset()
{
    // --------------------------------------------------------------------
    // Instantiate the "OT Made Easy" object.
    //
    var madeEasy	= OT_ME()
    // ------------------------------

    var strUsage = concat("\n\nUsage: issue_asset.ot --server SERVER_ID --mynym NYM_ID\n\n",
                      "       (NYM_ID must already be the 'contract' key on the new contract.)\n       See create_asset_contract.ot before running this script.\n\n")

    OT_API_Output(0, strUsage)

    // ----------------------------------------------------
    if (VerifyExists("Server") && VerifyExists("MyNym"))
    {   
        OT_API_Output(0, "Please paste a currency contract, followed by an EOF or a ~ by itself on a blank line:\n\n")
        
        // The reason we accept the tilde ~ on a blank line by itself, is because
        // the EOF, while it works, causes us not to be able to read any more input
        // from stdin. Stdin is considered "closed" for the duration of the run.
        // So the tilde allows us to read multiple times without closing stdin.
        
        var strContract = OT_CLI_ReadUntilEOF() 

        if (!VerifyStringVal(strContract))
        {
            OT_API_Output(0, "\n\n Sorry, You must input a currency contract, in order to issue it on an OT server.\n\n")
            return (-1)
        }
        // ------------
        
        var strResponse	= madeEasy.issue_asset_type(Server, MyNym, strContract)
        var nStatus     = VerifyMessageSuccess(strResponse)
        
        // NOTICE: No need here to deal with retries, timeouts, request number,
        // syncing transaction number, download / process nymbox, etc! It's all
        // handled at a lower level!  Instead, simply check for success or failure:
        //
        // -1 is error, 
        //  0 is reply received: failure 
        //  1 is reply received: success
        //
        switch(nStatus)
        {
            case (1)
            {
                OT_API_Output(0, "\n\n SUCCESS in issue_asset! Server response:\n\n");
                print(strResponse) // stdout
                break
            }
            case (0)
            {
                OT_API_Output(0, "\n\n FAILURE in issue_asset! Server response:\n\n");
                print(strResponse) // stdout
                break
            }
            default
            {
                OT_API_Output(0, "\n\nError in issue_asset! nStatus is: "+nStatus.to_string()+"\n")
                
                if (VerifyStringVal(strResponse))
                {
                    OT_API_Output(0, "Server response:\n\n");
                    print(strResponse) // stdout
                }
                break
            }
        }
        OT_API_Output(0, "\n\n") //stderr
        
        return nStatus
    }
    
    return 0
}


main_issue_asset()


