#!/usr/bin/env ot

// --------------------------------------------------------------------
// Instantiate the "OT Made Easy" object.
//
var madeEasy	= OT_ME()
// ------------------------------

// Just to show how easy it is now, let's try a "create_market_offer" message.
// (It creates a market offer.)


var strUsage = concat("\n\n    USAGE: create_offer.ot --myacct <YOUR_ASSET_ACCT> --hisacct <YOUR_CURRENCY_ACCT>\n\n",
                          " Optional: --args \"type bid|ask scale 1 quantity 100 price 101\"\n\n")



def details_create_offer(strScale, strMinIncrement, strQuantity, strPrice, bSelling) : strScale.is_type(string_type) && strMinIncrement.is_type(string_type) && strQuantity.is_type(string_type) && strPrice.is_type(string_type) && bSelling.is_type(bool_type)
{
    var strMyNymID1 = OT_API_GetAccountWallet_NymID(MyAcct)
    var strMyNymID2 = OT_API_GetAccountWallet_NymID(HisAcct)
    
    if (!VerifyStringVal(strMyNymID1) || !VerifyStringVal(strMyNymID2) || (strMyNymID1 != strMyNymID2))
    {
        OT_API_Output(0, "You must supply myacct as your asset account, and hisacct as your currency account.\n")
        OT_API_Output(0, "Also, both accounts must be owned by the same Nym (you.)\n\n")
        return (-1)
    }
    // ----------------------------------------------
    //
    // Send the transaction.
    //
    var strResponse	= madeEasy.create_market_offer(Server, strMyNymID1, MyAcct, HisAcct, strScale, strMinIncrement, strQuantity, strPrice, bSelling)
    var strAttempt  = "create_market_offer"
    // ----------------------------------------------
    // NOTICE: No need here to deal with retries, timeouts, request number,
    // syncing transaction number, download / process nymbox, etc! It's all
    // handled at a lower level!  Instead, simply check for success or failure:
    
    // ***************************************************************
    
    var nInterpretReply = InterpretTransactionMsgReply(Server, strMyNymID1, MyAcct, strAttempt, strResponse)
    
    if (1 == nInterpretReply)
    {    OT_API_Output(0, "Server response ("+strAttempt+"): SUCCESS placing market offer!\n\n") }
    
    return nInterpretReply
}



def main_create_offer()
{
    OT_API_Output(0, strUsage)
    // ------------------------------------        

    if (VerifyExists("Server") && VerifyExists("MyAcct") && VerifyExists("HisAcct"))
    {
        var strScale               = "0" // must be 1, 10, 100, etc
        var strMinIncrement        = "0" // must be 1, 2, 3, etc
        var strQuantity            = "0" // must be >= 1
        var strPrice               = "0" // must be >= 1
        var strType                = ""  // must be bid or ask
        // ------------------------------------        
        var strDefaultScale        = "1"    // must be 1, 10, 100, etc
        var strDefaultMinIncrement = "1"    // must be 1, 2, 3, etc
        var strDefaultQuantity	   = "100"  // must be >= 1
        var strDefaultPrice		   = "101"  // must be >= 1
        var strDefaultType         = "bid"  // must be bid or ask
        // ------------------------------------
        // If custom arguments have been passed on the command line,
        // then grab them and use them instead of asking the user to enter them
        // at the command line.
        //
        if (VerifyExists("Args"))
        {
            // std::string OT_CLI_GetValueByKey(const std::string str_Args, 
            //                                  const std::string str_key)
            // 
            // OPTION:   --args "key value key value"
            // EXAMPLE:  --args "type bid scale 1 quantity 100 price 101"
            // EXAMPLE:  --args "type ask scale 1 quantity 100 price 101"
            //
            var strNewScale    = OT_CLI_GetValueByKey( Args, "scale"    ) // 1, 10, 100, 1000, etc
            var strNewMinInc   = OT_CLI_GetValueByKey( Args, "min_inc"  ) // 1, 2, 3, 4, etc. Usually 1.
            var strNewQuantity = OT_CLI_GetValueByKey( Args, "quantity" ) // quantity for sale/purchase. 
            var strNewPrice    = OT_CLI_GetValueByKey( Args, "price"    ) // per scale
            var strNewType     = OT_CLI_GetValueByKey( Args, "type"    )  // bid / ask
            
            // ----------------------------------------------
            // Set the values based on the custom arguments, for those found.
            //
            if (VerifyStringVal(strNewScale))
            {    strScale = strNewScale }
            if (VerifyStringVal(strNewMinInc))
            {    strMinIncrement = strNewMinInc }
            if (VerifyStringVal(strNewQuantity))
            {    strQuantity = strNewQuantity }
            if (VerifyStringVal(strNewPrice))
            {    strPrice = strNewPrice }
            if (VerifyStringVal(strNewType))
            {    strType = strNewType }
        }            
        // ------------------------------------
        // If the offer parameters aren't satisfied yet, then
        // ask the user to supply them at the command line.
        //
        if (!VerifyStringVal(strScale) || (strScale.to_int() < 1))
        {
            OT_API_Output(0, "Enter the market scale (1, 10, 100, etc)["+strDefaultScale+"]: ")
            strScale        = OT_CLI_ReadLine()
        }
        if (!VerifyStringVal(strMinIncrement) || (strMinIncrement.to_int() < 1))
        {
            OT_API_Output(0, "Enter the minimum increment["+strDefaultMinIncrement+"]: ")
            strMinIncrement	= OT_CLI_ReadLine()
        }
        if (!VerifyStringVal(strQuantity) || (strQuantity.to_int() < 1))
        {
            OT_API_Output(0, "Enter the quantity being purchased/sold["+strDefaultQuantity+"]: ")
            strQuantity		= OT_CLI_ReadLine()
        }
        if (!VerifyStringVal(strPrice) || (strPrice.to_int() < 1))
        {
            OT_API_Output(0, "Enter the price per scale["+strDefaultPrice+"]: ")
            strPrice		= OT_CLI_ReadLine()
        }
        if (!VerifyStringVal(strType) || ((strType != "bid") && (strType != "ask")))
        {
            OT_API_Output(0, "Enter the order type (bid/ask) ["+strDefaultType+"]: ")
            strType		= OT_CLI_ReadLine()
        }
        // ----------------------------------------------
        if (!VerifyStringVal(strScale) || (strScale.to_int() < 1))
        {    strScale = strDefaultScale }
        if (!VerifyStringVal(strMinIncrement) || (strMinIncrement.to_int() < 1))
        {    strMinIncrement = strDefaultMinIncrement }
        if (!VerifyStringVal(strQuantity) || (strQuantity.to_int() < 1))
        {    strQuantity = strDefaultQuantity }
        if (!VerifyStringVal(strPrice) || (strPrice.to_int() < 1))
        {    strPrice = strDefaultPrice }
        if (!VerifyStringVal(strType)  || ((strType != "bid") && (strType != "ask")))
        {    strType = strDefaultType }
        // ----------------------------------------------    
        //
        // false == buying    bid
        // true  == selling   ask
        //
        var bType	= ((strType == "bid") ? false : true);
        // ----------------------------------------------    
        return details_create_offer(strScale, strMinIncrement, strQuantity, strPrice, bType)
    }
    
    return (-1)
}



// Start here:
//
main_create_offer()



















