/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class OTPassword : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal OTPassword(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(OTPassword obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~OTPassword() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapiPINVOKE.delete_OTPassword(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public OTPassword.BlockSize blockSize {
    get {
      OTPassword.BlockSize ret = (OTPassword.BlockSize)otapiPINVOKE.OTPassword_blockSize_get(swigCPtr);
      return ret;
    } 
  }

  public string getPassword() {
    string ret = otapiPINVOKE.OTPassword_getPassword(swigCPtr);
    return ret;
  }

  public int setPassword(string szInput, int nInputSize) {
    int ret = otapiPINVOKE.OTPassword_setPassword(swigCPtr, szInput, nInputSize);
    return ret;
  }

  public int getBlockSize() {
    int ret = otapiPINVOKE.OTPassword_getBlockSize(swigCPtr);
    return ret;
  }

  public int getPasswordSize() {
    int ret = otapiPINVOKE.OTPassword_getPasswordSize(swigCPtr);
    return ret;
  }

  public void zeroMemory() {
    otapiPINVOKE.OTPassword_zeroMemory(swigCPtr);
  }

  public OTPassword(OTPassword.BlockSize theBlockSize) : this(otapiPINVOKE.new_OTPassword__SWIG_0((int)theBlockSize), true) {
  }

  public OTPassword() : this(otapiPINVOKE.new_OTPassword__SWIG_1(), true) {
  }

  public OTPassword(string szInput, int nInputSize, OTPassword.BlockSize theBlockSize) : this(otapiPINVOKE.new_OTPassword__SWIG_2(szInput, nInputSize, (int)theBlockSize), true) {
  }

  public OTPassword(string szInput, int nInputSize) : this(otapiPINVOKE.new_OTPassword__SWIG_3(szInput, nInputSize), true) {
  }

  public enum BlockSize {
    DEFAULT_SIZE = 128,
    LARGER_SIZE = 32767
  }

}
