#########################################################################
#									#
#									#
#		##	INSTALL - Windows	##			#
#									#
#									#
#########################################################################


## Install for OT on Windows ##

This guide has only been tested on Windows 7 (32bit and x64)

You can run OT on Windows XP (sp3) to Windows 8
However you can only compile OT on Windows Vista (sp2) or later


## Things to install:  IN THIS ORDER!


#########################################################################

If you are on x64 make sure you install both the x64 and x32 versions.

OpenSSL
http://slproweb.com/products/Win32OpenSSL.html

#########################################################################

If you are a developer and want to compile OT, you need the following:

1. Microsoft Visual Studio Express 2013 for Windows Desktop
http://www.visualstudio.com/en-us/downloads

3. OpenSSL

For OpenSSL make sure you install the Visual C++ 2008 Redistributables first.
When installing OpenSSL, install to the default location, and select to install
the lib's to the system folders.

http://slproweb.com/products/Win32OpenSSL.html

Visual C++ 2008 Redistributables
Win32 OpenSSL v1.0.1e
Visual C++ 2008 Redistributables (x64)
Win64 OpenSSL v1.0.1e


5. Java SE Runtime Environment 7 (Win32 and x64) and Java SE Development Kit 7 (Win32 and x64)
http://www.oracle.com/technetwork/java/javase/downloads/index.html

#########################################################################

At this point you can run development builds. However cannot fully compile OT

#########################################################################

Additional Dependances:

da2ce7 has compiled the following dependances to make life easier.
The instructions to compile these yourself are here:
https://github.com/FellowTraveler/Open-Transactions/tree/master/project/_3rdparty


each of the following deps are uploaded to (maintained by da2ce7):


## Dependant LIB's

ChaiScript 5.1 (Latest GIT Version)

Google Protocol Buffers

ZeroMQ 2x


You need to merge all the the 'lib' and 'include' folders in each of the archives
(eg. protobuf, zeromq2-x, ChaiScript)
into the root of the OT folder.


## Generate Protobuf Files

Run the script file "makeproto.bat" in the project folder.



## Compile OT

Load up the 'Open-Transactions' project that resides in the 'project' folder

Select the mode you want to compile:  eg. Debug, or Release.  Win32 or x64

Use the Build Project option to make the OT.



## Compile OT SWIG JAVA LIB

Load up the "OTApi-Wrap' project that is in the swig\project folder.

Select the module and mode you want to compile.

Use the Build Project option to make the OT.



## Using the resulting binaries:


The ready folder for your use will be in the lib dir.  eg.  lib\x64\Release



## Have fun!!!!!