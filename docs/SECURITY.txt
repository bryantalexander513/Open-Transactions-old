





// --------------------------------------------------------
/*

DONE:
Valgrind scan and numerous fixes stemming from it, a year ago.

TODO:
Need to do another Valgrind scan. It's been a while.
ARE THERE ANY OTHER static analyzers we should be using?


TODO: grep the code for todos and security notes and fix them all.

TODO: Look up the standard security rules and make sure we're compliant
with everything. See notes in OTPassword.h/cpp

TODO: code audit (by outside experts.)



NOTE: The OTContract signature code had a subtle bug that is now
fixed. Certain signatures would fail to verify due to the fact that
the openSSL functions were being passed a wrong parameter, but the
bug was such that it still worked with most data. Every now and then,
a signature comes along with data outside a specific range and BAM.
==> I only note this here because as a result of fixing this, I
ended up going over the signature code VERY closely and reading all
the docs for those functions, and remembering a customization I had
thrown in allowing for multiple-hashes in a signature, not just one.
(Necessitating the use of a lower-level function, of course, which
I had copied from Google and which was being used slightly wrong.)
This is a good process because I feel pretty good about the signature
code now. 








// --------------------------------------------------------


DONE:
OTPassword class. This is a 128-byte (configurable) space which
zeros itself out in its destructor. Care is taken to insure that
the memory is actually zeroed out, and not left intact due to some
compiler optimization etc.

TODO:
Make sure that ALL passphrases in OT are handled with OTPassword. I
exposed it in SWIG also, so I need to make sure the SWIG-generated
version uses char[] instead of String, and that the char[] is properly
disposed of.  Need to make sure no Java Strings in Moneychanger are
storing any private keys or passphrases.



TODO: Make sure all files, where necessary, are signed. Should they 
also be encrypted, or should we leave that to the filesystem?



















// --------------------------------------------------------












































*/
// --------------------------------------------------------
